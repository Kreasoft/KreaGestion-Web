# Generated by Django 5.1.5 on 2025-09-30 01:37

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("compras", "__first__"),
        ("empresas", "0005_remove_configuracionempresa_formato_boletas_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Proveedor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "codigo",
                    models.CharField(
                        max_length=20, verbose_name="Código del Proveedor"
                    ),
                ),
                (
                    "nombre",
                    models.CharField(
                        max_length=200, verbose_name="Nombre del Proveedor"
                    ),
                ),
                (
                    "razon_social",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Razón Social"
                    ),
                ),
                (
                    "rut",
                    models.CharField(
                        max_length=12,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="El RUT debe tener el formato XX.XXX.XXX-X",
                                regex="^\\d{1,2}\\.\\d{3}\\.\\d{3}-[\\dkK]$",
                            )
                        ],
                        verbose_name="RUT",
                    ),
                ),
                (
                    "giro",
                    models.CharField(max_length=200, verbose_name="Giro Comercial"),
                ),
                (
                    "tipo_proveedor",
                    models.CharField(
                        choices=[
                            ("productos", "Productos"),
                            ("servicios", "Servicios"),
                            ("ambos", "Productos y Servicios"),
                        ],
                        default="productos",
                        max_length=20,
                    ),
                ),
                (
                    "categoria_principal",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Categoría Principal"
                    ),
                ),
                ("direccion", models.TextField(verbose_name="Dirección")),
                ("comuna", models.CharField(max_length=100, verbose_name="Comuna")),
                ("ciudad", models.CharField(max_length=100, verbose_name="Ciudad")),
                ("region", models.CharField(max_length=100, verbose_name="Región")),
                ("telefono", models.CharField(max_length=20, verbose_name="Teléfono")),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, null=True, verbose_name="Email"
                    ),
                ),
                (
                    "sitio_web",
                    models.URLField(blank=True, null=True, verbose_name="Sitio Web"),
                ),
                (
                    "plazo_entrega",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Plazo de Entrega"
                    ),
                ),
                (
                    "condiciones_pago",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Condiciones de Pago"
                    ),
                ),
                (
                    "descuento_porcentaje",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=5,
                        verbose_name="Descuento por Defecto (%)",
                    ),
                ),
                (
                    "calificacion",
                    models.IntegerField(
                        choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)],
                        default=3,
                        verbose_name="Calificación (1-5)",
                    ),
                ),
                (
                    "observaciones_calidad",
                    models.TextField(
                        blank=True, verbose_name="Observaciones de Calidad"
                    ),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("activo", "Activo"),
                            ("inactivo", "Inactivo"),
                            ("suspendido", "Suspendido"),
                            ("bloqueado", "Bloqueado"),
                        ],
                        default="activo",
                        max_length=20,
                    ),
                ),
                (
                    "observaciones",
                    models.TextField(
                        blank=True, verbose_name="Observaciones Generales"
                    ),
                ),
                (
                    "fecha_alta",
                    models.DateField(
                        default=django.utils.timezone.now, verbose_name="Fecha de Alta"
                    ),
                ),
                ("fecha_creacion", models.DateTimeField(auto_now_add=True)),
                ("fecha_modificacion", models.DateTimeField(auto_now=True)),
                (
                    "creado_por",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "empresa",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="empresas.empresa",
                    ),
                ),
            ],
            options={
                "verbose_name": "Proveedor",
                "verbose_name_plural": "Proveedores",
                "ordering": ["nombre"],
                "unique_together": {("empresa", "codigo")},
            },
        ),
        migrations.CreateModel(
            name="HistorialPreciosProveedor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "precio_anterior",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="Precio Anterior"
                    ),
                ),
                (
                    "precio_nuevo",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="Precio Nuevo"
                    ),
                ),
                (
                    "fecha_cambio",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha del Cambio"
                    ),
                ),
                (
                    "motivo_cambio",
                    models.TextField(blank=True, verbose_name="Motivo del Cambio"),
                ),
                (
                    "cambiado_por",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "orden_compra",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="compras.ordencompra",
                    ),
                ),
                (
                    "proveedor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="historial_precios",
                        to="proveedores.proveedor",
                    ),
                ),
            ],
            options={
                "verbose_name": "Historial de Precios del Proveedor",
                "verbose_name_plural": "Historial de Precios de Proveedores",
                "ordering": ["-fecha_cambio"],
            },
        ),
        migrations.CreateModel(
            name="EvaluacionProveedor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fecha_evaluacion",
                    models.DateField(
                        default=django.utils.timezone.now,
                        verbose_name="Fecha de Evaluación",
                    ),
                ),
                (
                    "periodo_evaluado",
                    models.CharField(max_length=50, verbose_name="Período Evaluado"),
                ),
                (
                    "calidad_productos",
                    models.IntegerField(
                        choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)],
                        verbose_name="Calidad de Productos",
                    ),
                ),
                (
                    "cumplimiento_plazos",
                    models.IntegerField(
                        choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)],
                        verbose_name="Cumplimiento de Plazos",
                    ),
                ),
                (
                    "atencion_cliente",
                    models.IntegerField(
                        choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)],
                        verbose_name="Atención al Cliente",
                    ),
                ),
                (
                    "precios_competitivos",
                    models.IntegerField(
                        choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)],
                        verbose_name="Precios Competitivos",
                    ),
                ),
                (
                    "resolucion_problemas",
                    models.IntegerField(
                        choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)],
                        verbose_name="Resolución de Problemas",
                    ),
                ),
                (
                    "calificacion_general",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=3,
                        verbose_name="Calificación General",
                    ),
                ),
                ("fortalezas", models.TextField(blank=True, verbose_name="Fortalezas")),
                (
                    "areas_mejora",
                    models.TextField(blank=True, verbose_name="Áreas de Mejora"),
                ),
                (
                    "comentarios_generales",
                    models.TextField(blank=True, verbose_name="Comentarios Generales"),
                ),
                (
                    "recomendacion",
                    models.CharField(
                        choices=[
                            ("mantener", "Mantener Relación"),
                            ("mejorar", "Necesita Mejorar"),
                            ("revisar", "Revisar Relación"),
                            ("terminar", "Terminar Relación"),
                        ],
                        default="mantener",
                        max_length=20,
                        verbose_name="Recomendación",
                    ),
                ),
                ("fecha_creacion", models.DateTimeField(auto_now_add=True)),
                (
                    "evaluado_por",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "proveedor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="evaluaciones",
                        to="proveedores.proveedor",
                    ),
                ),
            ],
            options={
                "verbose_name": "Evaluación de Proveedor",
                "verbose_name_plural": "Evaluaciones de Proveedores",
                "ordering": ["-fecha_evaluacion"],
            },
        ),
        migrations.CreateModel(
            name="ContactoProveedor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nombre",
                    models.CharField(
                        max_length=200, verbose_name="Nombre del Contacto"
                    ),
                ),
                (
                    "cargo",
                    models.CharField(blank=True, max_length=100, verbose_name="Cargo"),
                ),
                (
                    "tipo_contacto",
                    models.CharField(
                        choices=[
                            ("principal", "Contacto Principal"),
                            ("comercial", "Contacto Comercial"),
                            ("administrativo", "Contacto Administrativo"),
                            ("tecnico", "Contacto Técnico"),
                            ("facturacion", "Facturación"),
                            ("otro", "Otro"),
                        ],
                        default="otro",
                        max_length=20,
                    ),
                ),
                (
                    "telefono",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Teléfono"
                    ),
                ),
                (
                    "celular",
                    models.CharField(blank=True, max_length=20, verbose_name="Celular"),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, null=True, verbose_name="Email"
                    ),
                ),
                (
                    "observaciones",
                    models.TextField(blank=True, verbose_name="Observaciones"),
                ),
                (
                    "es_contacto_principal",
                    models.BooleanField(
                        default=False, verbose_name="Es Contacto Principal"
                    ),
                ),
                ("fecha_creacion", models.DateTimeField(auto_now_add=True)),
                ("fecha_modificacion", models.DateTimeField(auto_now=True)),
                (
                    "proveedor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contactos",
                        to="proveedores.proveedor",
                    ),
                ),
            ],
            options={
                "verbose_name": "Contacto de Proveedor",
                "verbose_name_plural": "Contactos de Proveedores",
                "ordering": ["proveedor", "tipo_contacto", "nombre"],
            },
        ),
        migrations.CreateModel(
            name="CategoriaProveedor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "es_categoria_principal",
                    models.BooleanField(
                        default=False, verbose_name="Es Categoría Principal"
                    ),
                ),
                (
                    "descripcion",
                    models.TextField(blank=True, verbose_name="Descripción"),
                ),
                (
                    "plazo_entrega_categoria",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Plazo de Entrega"
                    ),
                ),
                (
                    "descuento_categoria",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=5,
                        verbose_name="Descuento Específico (%)",
                    ),
                ),
                (
                    "activa",
                    models.BooleanField(default=True, verbose_name="Categoría Activa"),
                ),
                ("fecha_creacion", models.DateTimeField(auto_now_add=True)),
                (
                    "proveedor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="categorias",
                        to="proveedores.proveedor",
                    ),
                ),
            ],
            options={
                "verbose_name": "Categoría de Proveedor",
                "verbose_name_plural": "Categorías de Proveedores",
                "ordering": ["proveedor"],
            },
        ),
    ]
